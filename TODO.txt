zacit hledat rebooty:
	potencialni reboot:
		primo v playbook taks/pretasks:
			- skrz reboot module
			- skrz command "sudo reboot"
			- notify handleru:
				- definovanyho v playbooku
				- definovanyho v nejakej roli
		task v nejakej roli:
			- reboot module
			- skrz command "sudo reboot"
			- notify handler kterej je definovanej v te roli
			- notify handler kterej je definovanej v tasku te role
			- notify handler kterej je definovanej v tom hlavnim playbooku

	u kazdeho reboota potreba overit zda rebootne control node
	notify v role task, kterej notifyne handler definovanej main playbooku
	notify v role task, kterej notifyne handler definovanej v roli
	...
	...
skript bude muset:
	- vytvorit soubor se systemd unit - DONE
	- na zacatek playbooku do pretasku pridat vytvoreni, povoleni a reloadnuti systemd unity - DONE
	- na konec playbooku do tasku pridat odstraneni systemd unit - DONE
	- udelat globalni counter na ty rebooty - DONE
	- ten task kde probiha reboot, musi obalit do blocku
		- prvni task v blocku zvysi globalni counter, kterej udava ktery reboot se provede - DONE
		- druhy task v blocku bude command sudo reboot - DONE
		- podminka when: pokud counter bude roven odpovidajicimu cislu rebootu - DONE

	- odstranit notify cast - DONE
	- pridat ten novy block s rebootem a zvysenim counteru za ten urcitej task v roli


zjistit jak zvysit hodnotu toho counteru, to pujde - DONE


potreba establishnout ktery playbooky kontrolovat
	uzivatel si v tom projektu zvoli urcitej profil a podle nej se vygenerujou playbooky do urcitejch mist
	a ty je potreba zkontrolovat 
	hlavni playbook kterej spousti ti ostatni je ve slozce playbook
