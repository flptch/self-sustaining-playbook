##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Get status/IPs of VMs (store in dict)
- name: Get IPs of running VMs
  shell: set -o pipefail && virsh domifaddr {{ item.name }} | grep -e vnet | awk '{print $4}' | awk -F'/' '{print $1}'
  args:
    executable: /bin/bash
  register: vm_out
  retries: 12
  delay: 10
  until: vm_out.stdout | length > 0
  loop: "{{ vms }}"
  changed_when: true

- name: Store primary IPs of running VMs
  set_fact:
    vm_ips: "{{ vm_ips|default({}) | combine( {item.item.name: item.stdout.splitlines() | first} ) }}"
  when: item.changed and item.item.name is defined  # noqa 503
  loop: "{{ vm_out.results }}"

- name: Print vm_ips
  debug:
    var: vm_ips

- name: Update /etc/hosts file on bastion host
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.value }} {{ item.key }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.key }}"
  with_items: "{{ vm_ips | dict2items }}"

- name: Wait up to 300 seconds for port 22 to become open and contain "OpenSSH"
  wait_for:
    port: 22
    host: '{{ item.value }}'
    search_regex: OpenSSH
    delay: 1
  with_items: "{{ vm_ips | dict2items }}"

- name: Remove old ECDSA key fingerprint
  command: ssh-keygen -f "~/.ssh/known_hosts" -R "{{ item.value }}"
  with_items: "{{ vm_ips | dict2items }}"
  changed_when: true

- name: Store ECDSA key fingerprint
  command: ssh -o StrictHostKeyChecking=No {{ item.value }} hostname
  with_items: "{{ vm_ips | dict2items }}"
  changed_when: true

- name: Set VM host path
  set_fact:
    vm_host_path: "{{ lookup('env', 'PWD') }}"
  run_once: true
  delegate_to: localhost

- name: Set vm_image_distribution for vm_host in next play
  set_fact:
    vm_image_distribution: "{{ vm_image_distribution }}"

- name: Set vm_image_distribution for VMs in next play
  set_fact:
    vm_image_distribution: "{{ vm_image_distribution }}"
  with_items: "{{ vm_ips | dict2items }}"
  delegate_to: "{{ item.key }}"
  delegate_facts: True
