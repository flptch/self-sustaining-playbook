##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Prepare bastion host configuration for VXLAN in ~/.ssh/config
  blockinfile:
    path: ~/.ssh/config
    block: |
      Host {{ item.value }}
        ProxyCommand ssh root@{{ hostvars[groups['vm_host'][0]]['ansible_default_ipv4']['address'] }} -W %h:%p
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.key }} VXLAN"
    create: yes
    owner: "{{ ansible_user_id }}"
    mode: '0644'
  with_items: "{{ vm_vxlan_ips | dict2items }}"
  delegate_to: localhost

- name: Remove old ECDSA key fingerprint on localhost for VXLAN
  command: ssh-keygen -f "~/.ssh/known_hosts" -R "{{ item.key }}"
  with_items: "{{ vm_vxlan_ips | dict2items }}"
  delegate_to: localhost
  changed_when: true

- name: Store ECDSA key fingerprint for VXLAN
  command: ssh -o StrictHostKeyChecking=No {{ item.value }} hostname
  with_items: "{{ vm_vxlan_ips | dict2items }}"
  delegate_to: "{{ groups['vm_host'][0] }}"
  changed_when: true

- name: Store ECDSA key fingerprint on localhost for VXLAN
  command: ssh -o StrictHostKeyChecking=No {{ item.key }} hostname
  with_items: "{{ vm_vxlan_ips | dict2items }}"
  delegate_to: localhost
  changed_when: true

- name: Update vm inventory file - all
  ini_file:
    dest: "{{ vm_inventory_name }}"
    section: "all"
    option: "{{ item.name }} ansible_host={{ vm_vxlan_ips[item.name] }} ip={{ vm_vxlan_ips[item.name] }}"
    no_extra_spaces: yes
    allow_no_value: yes
    mode: '0644'
    state: present
    backup: no
  with_items: "{{ vms }}"
  delegate_to: localhost

- name: Update vm inventory file - kube*
  ini_file:
    dest: "{{ vm_inventory_name }}"
    section: "{% if item.0.type == 'ctrl' %}{{ item.1 }}{% elif item.0.type == 'work' %}kube_node{% endif %}"
    option: "{{ item.0.name }}"
    no_extra_spaces: yes
    allow_no_value: yes
    mode: '0644'
    state: present
    backup: no
  with_nested:
    - "{{ vms }}"
    - ['kube_control_plane', 'etcd']
  delegate_to: localhost
