apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telemetry-aware-scheduling.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "telemetry-aware-scheduling.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "telemetry-aware-scheduling.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ randAlphaNum 5 | quote }}
      labels:
{{ include "telemetry-aware-scheduling.labels" . | indent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "telemetry-aware-scheduling.serviceAccountName" . }}
      containers:
      - name: tas-extender
        command:
        - /extender
        - --syncPeriod=2s
        - --v={{ .Values.verbosity }}
        {{- if .Values.tls.enabled }}
        - --cert={{ .Values.tls.tas_ssl }}/{{ .Values.tls.secretName }}.cert
        - --cacert={{ .Values.tls.tas_ssl }}/ca.crt
        - --key={{ .Values.tls.tas_ssl }}/{{ .Values.tls.secretName }}.key
        {{- else }}
        - --unsafe=true
        {{- end }}
        image: "{{ .Values.extenderImage.repository }}:{{ .Values.extenderImage.tag }}"
        imagePullPolicy: {{ .Values.extenderImage.pullPolicy }}
        securityContext:
          runAsUser: 10001
        {{- if .Values.tls.enabled }}
        volumeMounts:
        - name: certs
          mountPath: {{ .Values.tls.tas_ssl }}
      volumes:
      - name: certs
        secret:
          secretName: {{ .Values.tls.secretName }}
      {{- end }}

