##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# This role installs Intel DDP packages for X700 and X800 series NICs.
#
# It depends on package variables defined in vars/main.yml
# The "ddp_pkgs" is map of a list of NIC specific package definition.
#
# Each list expected to provide "nic_driver": <e.g. i40e for X700 & ice
# for x800>, "install_dir":<where to install>, and "pkgurls":<a list
# of URLs of relevant packages>.
#
# latest list of available packages can be found here:
# https://downloadcenter.intel.com/search?keyword=Dynamic+Device+Personalization
#
# All packages will be downloaded, uncompressed and placed in NICs
# driver specific location so that these packages are available to be
# loaded onto a NIC adapter on demand.
#
# Example configurations:
#   ddp_pkgs:
#     - nic_driver: i40e
#       install_dir: /lib/firmware/intel/i40e/ddp
#       pkgurls:
#         - "https://downloadmirror.intel.com/27587/eng/gtp.zip"
#         - "https://downloadmirror.intel.com/28940/eng/mplsogreudp.zip"
#         - "https://downloadmirror.intel.com/28040/eng/ppp-oe-ol2tpv2.zip"
#     - nic_driver: ice
#       install_dir: /lib/firmware/updates/intel/ice/ddp/
#       pkgurls:
#         - "https://downloadmirror.intel.com/29889/eng/ice_comms-1.3.24.0.zip"

- name: create temporary directory for DDP profiles
  tempfile:
    state: directory
    prefix: ddp
  register: tempdir_ddp

# Download and install ddp pkgs listed given in vars/main.yml file
- name: download and install all listed DDP packages
  block:
    - name: calling install_pkgs.yml
      include: install_pkgs.yml
      vars:
        install_dir: "{{ item.install_dir }}"
        pkgurls: "{{ item.pkgurls }}"
        tmp_placeholder: "{{ tempdir_ddp.path }}/{{ item.nic_driver }}"
      with_items: "{{ ddp_pkgs }}"
  when:
    - ddp_pkgs|length > 0

# clean up
- name: remove temporary directory
  become: yes
  file:
    path: "{{ tempdir_ddp.path }}"
    state: absent
