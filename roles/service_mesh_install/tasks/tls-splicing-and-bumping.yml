##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: Create istio profiles dir if does not exist
  file:
    path: "{{ service_mesh_charts_dir }}"
    state: directory
    owner: root
    mode: 0755

- name: populate intel-tls-splicing manifest template with values
  template:
    src: "intel-tls-splicing.yaml.j2"
    dest: "{{ (service_mesh_charts_dir, 'intel-tls-splicing.yaml') |  path_join }}"
    force: yes
    mode: preserve

- name: wait for the istio service mesh pods are in running state
  shell: |-
    set -o pipefail && \
    [ $(kubectl get pod -n {{ service_mesh.istio_namespace }} -l 'app in (istio-ingressgateway, istiod)' \
    | grep Running | wc -l) -eq 2 ]
  args:
    executable: /bin/bash
  register: ready
  retries: 120
  delay: 10
  until: ready.rc == 0
  changed_when: true

- name: deploy intel-tls-splicing
  shell: |-
    set -o pipefail && \
    kubectl apply -f "{{ (service_mesh_charts_dir, 'intel-tls-splicing.yaml') |  path_join }}" \
    -o yaml --dry-run=client | kubectl apply -f -
  args:
    executable: /bin/bash
  changed_when: true
