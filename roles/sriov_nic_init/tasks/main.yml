##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
## Initialize SR-IOV NICs:
# ------------------------
# Load DDP profile, create virtual functions, bring PF up & bind VFs drivers
# as specified in host_vars under "dataplane_interfaces:"

- name: regather facts in case of interface changes from start of play
  setup:
    gather_subset:
      - network

- name: Load DDP profile
  include_role:
    name: load_ddp
  # DDP profile can be installed on PF0 only, specifying under other PF will be ignored.
  # Check if the selected NIC is a PF0 (PCI address ends with xx:00.0)
  vars:
    nic: "{{ nic_port.name }}"
    nic_module: "{{ ansible_facts[nic_port.name]['module'] }}"
    ddp_profile: "{{ nic_port.ddp_profile }}"
  when:
    - ansible_facts[nic_port.name]['pciid'].endswith(':00.0')
    - nic_port.ddp_profile|default("")|length > 0
    - install_ddp_packages | default(false) | bool
  loop: "{{ dataplane_interfaces }}"
  loop_control:
    loop_var: nic_port

- name: install dependencies
  include_role:
    name: install_dependencies

- name: create configuration directory if it does not exist
  file:
    path: "{{ sriov_config_path }}"
    state: directory
    mode: '0700'
  become: yes

- name: clean up existing configuration file
  file:
    path: "{{ item }}"
    state: absent
  become: yes
  with_items:
    - "{{ sriov_config_path }}/cek_sriov_numvfs"
    - "{{ sriov_config_path }}/cek_interfaces"

- name: configure VFs
  include_tasks: create_vfs.yml
  with_items: "{{ dataplane_interfaces }}"

- name: bring up PF interfaces
  command: ip link set {{ item.name }} up
  with_items: "{{ dataplane_interfaces }}"
  changed_when: true

- name: set VFs driver
  include: bind_vf_driver.yml
  when: item.sriov_numvfs | default(0) > 0
  with_items: "{{ dataplane_interfaces }}"

- name: copy NIC setup script to /usr/bin
  copy:
    src: "{{ role_path }}/files/cek_sriov_nic_init"
    dest: /usr/local/bin/cek_sriov_nic_init
    owner: root
    group: root
    mode: '0700'
  become: yes

- name: create systemd unit file
  template:
    src: cek_sriov_nic_init.service.j2
    dest: /lib/systemd/system/cek_sriov_nic_init.service
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: ensure that systemd service is enabled on startup and restarted to apply the configuration
  systemd:
    daemon_reload: yes
    enabled: yes
    state: restarted
    name: cek_sriov_nic_init
  become: yes
