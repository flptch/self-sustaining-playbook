##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies
  include_role:
    name: install_dependencies
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - prometheus_srv_expose | default(false)

- name: set default value of install_tas_demo_policy
  set_fact:
    install_tas_demo_policy: false

- name: set install_tas_demo_policy to True
  set_fact:
    install_tas_demo_policy: true
  when:
    - tas_enabled
    - tas_enable_demo_policy

- name: generate htpasswd file
  command: htpasswd -Bbn {{ prometheus_srv_user }} {{ prometheus_srv_password }}
  register: htpasswd
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - prometheus_srv_expose | default(false)

- name: create and sign certificate material
  include_role:
    name: create_signed_k8s_certs
  vars:
    secret_name: "{{ item.name }}-ssl"
    service_name: "{{ item.name }}"
    key_pair_name: "{{ item.name }}-tls"
    host_secrets_folder: "/etc/ssl/{{ item.name }}"
    k8s_namespace: "{{ telemetry_namespace }}"
    csr_cluster_name: "{{ cluster_name | default('cluster.local') }}"
  loop:
    - name: "grafana"
      expose: true
    - name: "node-exporter"
      expose: true
    - name: "prometheus-adapter"
      expose: true
    - name: "prometheus-srv"
      expose: "{{ prometheus_srv_expose | default(false) }}"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - item.expose

- name: prepare TAS demonstration policy files
  import_tasks: create-tas-demo-policy.yml
  when:
    - install_tas_demo_policy

- name: create persistent folder for grafana and prometheus
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u+rwx,g-rwx,o-
  when:
    - inventory_hostname == groups['kube_node'][0]
  loop:
    - /etc/grafana
    - /etc/prometheus

- name: install kube-prometheus
  import_tasks: kube-prometheus.yml
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
