##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
# Segmentation core dump issues in Ubuntu were previously caused by lshw; blocks will be recommended such as,
# hwinfo for RHEL / ROCKY & lshw for Ubuntu.
- name: block for dataplane interface list in Ubuntu
  block:
    - name: get interface of dataplane device
      shell: "set -o pipefail && hwinfo --network | grep -A 5 {{ nic.bus_info }}"
      args:
        executable: /bin/bash
      register: dataplane_interface_list_ubuntu
      changed_when: false

    - name: set dataplane_interface variable
      set_fact:
        dataplane_interface: "{{ dataplane_interface_list_ubuntu.stdout_lines[5] | regex_replace('\\s+Device File: ', '') }}"

    - name: creaing new_nic variable with name attached
      set_fact:
        new_nic: "{{ nic | combine ({ 'name' : dataplane_interface }) }}"

    - name: adding nic with name added to new_dataplane_interfaces
      set_fact:
         new_dataplane_interfaces: "{{ new_dataplane_interfaces + [ new_nic ] }}"
  when: ansible_distribution == "Ubuntu"

- name: block for dataplane interface list in RHEL / Rocky
  block:
    - name: get interface of dataplane device
      shell: "set -o pipefail && lshw -class network | grep -A 1 {{ nic.bus_info }}"
      args:
        executable: /bin/bash
      register: dataplane_interface_list
      changed_when: false

    - name: set dataplane_interface variable
      set_fact:
        dataplane_interface: "{{ dataplane_interface_list.stdout_lines[1] | regex_replace('\\s+logical name: ', '') }}"

    - name: creaing new_nic variable with name attached
      set_fact:
        new_nic: "{{ nic | combine ({ 'name' : dataplane_interface }) }}"

    - name: adding nic with name added to new_dataplane_interfaces
      set_fact:
        new_dataplane_interfaces: "{{ new_dataplane_interfaces + [ new_nic ] }}"
  when: ansible_os_family == "RedHat"
