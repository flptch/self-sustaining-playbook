##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies for QAT
  include_role:
    name: install_dependencies

- name: WA for libudev-dev version issue on Ubuntu 22.04
  apt:
    name: 'udev'
    state: latest # noqa 403 package-latest
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "22.04"

- name: get current udev package version
  shell: "set -o pipefail && apt list --installed 2>/dev/null |grep '^udev' | awk 'NR==1{ print $2 }'"
  args:
    executable: /bin/bash
  register: udev_pkg_version
  changed_when: false
  failed_when: "udev_pkg_version.stdout | length==0"
  when: ansible_distribution == "Ubuntu"

- name: current udev package version
  debug:
    msg: "udev_pkg_version={{ udev_pkg_version.stdout }}"
  when: ansible_distribution == "Ubuntu"

- name: install libudev-dev package on Ubuntu
  apt:
    name: 'libudev-dev={{ udev_pkg_version.stdout }}'
  when: ansible_distribution == "Ubuntu"

- name: create directory {{ qat_drivers_dir }} for all QAT dependencies
  file:
    path: "{{ qat_drivers_dir }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: download QAT drivers package {{ qat_drivers_version }}
  get_url:
    url: "{{ qat_drivers_download_url }}"
    checksum: "{{ qat_drivers_pkg_checksum }}"
    dest: "{{ qat_drivers_dir }}"
  register: qat_driver
  until: qat_driver is not failed
  retries: 5

- name: unarchive QAT drivers package
  unarchive:
    src: "{{ qat_drivers_dir }}/{{ qat_drivers_version }}.tar.gz"
    dest: "{{ qat_drivers_dir }}"
    remote_src: yes
    mode: 0755

- name: check all packages are present for QAT drivers installation
  command: ./configure
  args:
    chdir: "{{ qat_drivers_dir }}"
  register: qat_requirements
  ignore_errors: true
  changed_when: true

- name: playbook terminated packages for QAT drivers installation are missing
  fail:
    msg:
      - "Missing requirements for QAT drivers (i.e. kernel sources)"
      - "If failure persists, consider setting update_kernel: true in group_vars"
  when: "'error' in qat_requirements.stderr"

- name: make install QAT drivers
  make:
    chdir: "{{ qat_drivers_dir }}"
    target: install
  register: qat_make_install
  become: yes
  notify:
    - reboot server

- name: playbook terminated, QAT module load blocking on CentOS > 8
  fail:
    msg:
      - "Purpose for failure might be an already intel_qat module set up on server. Recommended is to have clean image of OS without pre-installed QAT module."
      - "make uninstall && make clean && make distclean commands can roll-back QAT drivers package {{ qat_drivers_version }} already carried out this point"
  when:
    - ansible_distribution == "CentOS" and ansible_distribution_version >= '8.3'
    - "'ERROR:' in qat_make_install.stderr"

- name: confirm QAT module installed
  shell: "set -o pipefail && lsmod | grep qat"
  args:
    executable: /bin/bash
  register: qat_confirm
  failed_when: '"intel_qat" not in qat_confirm.stdout'
  changed_when: false

- name: enable SRIOV QAT devices on VMs
  lineinfile:
    path: "/etc/default/qat"
    line: "SRIOV_ENABLE=1"
    regexp: "^#SRIOV_ENABLE=1"
    create: yes
    owner: root
    group: root
    mode: '0644'
  when:
    - on_vms is defined and on_vms

- name: make sure old qat_service is stopped and disabled
  service:
    state: stopped
    name: qat_service
    enabled: no

- name: make sure QAT service is started and enabled
  service:
    state: restarted
    name: qat
    enabled: yes
