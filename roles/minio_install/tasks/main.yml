##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: collect the number of nodes
  set_fact:
    minio_nodes: "{{ groups['kube_node'] | length }}"

- name: collect the minio_vfs of nodes
  set_fact:
    minio_tenant_sriov_vfs: "{{ hostvars[item]['dataplane_interfaces'] | map(attribute='minio_vf') | list | length }}"
  loop: "{{ groups['kube_node'] }}"

- name: check the number of nodes for MinIO install
  fail:
    msg: |
      Incorrect configuration pertaining the number of nodes for MinIO install.
      Make sure the number of nodes you are deploying is more than or equal to  {{ minio_tenant_servers }}
  when:
    - minio_nodes | int < minio_tenant_servers

- name: install MinIO operator/console
  import_tasks: build_minio_variables.yml
  when:
    - minio_nodes | int >= minio_tenant_servers

- name: install dependencies
  include_role:
    name: whereabouts_install

- name: install MinIO operator/console
  import_tasks: minio_operator.yml
  when:
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]

- name: create MinIO local storage
  import_tasks: file_blockdevice.yml
  when:
    - minio_tenant_enabled
    - minio_deploy_test_mode
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname in groups['kube_node']

- name: create MinIO nvme storage
  import_tasks: nvme_blockdevice.yml
  when:
    - minio_tenant_enabled
    - not minio_deploy_test_mode
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname in groups['kube_node']

- name: populate MinIO local persisitent volumes
  import_tasks: create_persistentvolumes.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]

- name: populate MinIO storage class
  import_tasks: create_storageclass.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]

- name: set minio_vfs to the controller
  set_fact:
    minio_vfs: "{{ minio_vfs | default([]) + hostvars[groups['kube_node'][0]]['minio_vfs'] }}"
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]

- name: prepare MinIO storage network
  import_tasks: prepare_minio_tenant_sriovnetwork.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - minio_vfs is defined and minio_vfs | length | int > 0

- name: populate MinIO storage network
  import_tasks: create_minio_tenant_sriovnetwork.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]
    - minio_vfs is defined and minio_vfs | length | int > 0

- name: install MinIO tenant
  import_tasks: minio_tenant.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]


- name: install additional Endpoints for MinIO Sample Tenant pods
  import_tasks: add_minio_tenant_endpoints.yml
  when:
    - minio_tenant_enabled
    - minio_nodes | int >= minio_tenant_servers
    - inventory_hostname == groups['kube_control_plane'][0]
    - minio_tenant_sriov_resources is defined and minio_tenant_sriov_resources | length > 0
    - minio_vfs is defined and minio_vfs | length | int > 0
