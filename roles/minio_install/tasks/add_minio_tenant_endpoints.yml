##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: check MinIO Tenant Helm charts temp directory
  stat:
    path: "{{ (project_root_dir, 'charts', 'tenant', 'temp') | path_join }}"
  register: tenant_temp_dir

- name: create the temp folder for MinIO Tenant custom values
  file:
    path: "{{ (project_root_dir, 'charts', 'tenant', 'temp') | path_join }}"
    state: directory
    mode: 0755
  when:
    - not tenant_temp_dir.stat.exists

- name: wait for MinIO pods to come up
  command: >-
    kubectl get pods -n={{ minio_tenant_namespace }} --selector app=minio -o json
  register: minio_tenant_get_pods
  until: minio_tenant_get_pods.stdout | from_json | json_query('items[*].status.phase') | unique == ["Running"]
  retries: 120
  delay: 60
  changed_when: true

- name: gather the deployed MinIO tenant pods definition
  shell: >-
    set -o pipefail && kubectl get pods -l app=minio -n {{ minio_tenant_namespace }} -o yaml >
    "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'tenants_pods.yaml') | path_join }}"
  args:
    executable: /bin/bash
  changed_when: true

- name: collect MinIO Tenant pods storage network IP addresses and push to controller node
  template:
    src: "minio_tenant_pods_ips_regex.j2"
    dest: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-pods-ips.txt') | path_join }}"
    force: yes
    mode: preserve

- name: read MinIO Tenant pods definition file contents
  command: cat {{ (project_root_dir, 'charts', 'tenant', 'temp', 'tenants_pods.yaml') | path_join }}
  register: pod_def_contents
  changed_when: true

- name: read regular expression to parse
  command: cat {{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-pods-ips.txt') | path_join }}
  register: regex_expr
  changed_when: true

- name: search IPs
  set_fact:
    parsed_result: "{{ pod_def_contents.stdout | regex_findall(regex_expr.stdout) }}"

- name: save parsed result into a file
  copy:
    content: "{{ parsed_result }}"
    dest: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'parsed-ips-result.txt') | path_join }}"
    backup: yes
    mode: 0644

- name: copy file python script
  copy:
    src: "{{ role_path }}/files/main.py"
    dest: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'main.py') | path_join }}"
    mode: '0755'

- name: generate MinIO Endpoints data
  command: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'main.py') | path_join }}"
  args:
    chdir: "{{ (project_root_dir, 'charts', 'tenant', 'temp') | path_join }}"
  changed_when: true

- name: fetch gen-endpoints-data.yaml to host
  fetch:
    src: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'gen-endpoints-data.yaml') | path_join }}"
    dest: "{{ ('/tmp', 'tenant', 'gen-endpoints-data.yaml') | path_join }}"
    flat: yes

- name: include variables for MinIO Endpoints
  include_vars: "{{ ('/tmp', 'tenant', 'gen-endpoints-data.yaml') | path_join }}"

- name: collect the deployed MinIO tenant pod names and node names
  shell: >-
    set -o pipefail && kubectl get pods -n {{ minio_tenant_namespace }} -o wide | grep {{ minio_tenant_namespace }} |awk -F ' ' '{ print $7 ": " $1}'
  args:
    executable: /bin/bash
  changed_when: true
  register: tenant_pod_node_info

- name: set var
  set_fact:
    pod_node: "{{ tenant_pod_node_info.stdout | from_yaml }}"

- name: populate MinIO Endpoints with additional networks
  template:
    src: "minio_tenant_endpoints.yml.j2"
    dest: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints' ~ ansible_loop.index ~ '.yml') | path_join }}"
    force: yes
    mode: preserve
  loop: "{{ groups['kube_node'] }}"
  loop_control:
    extended: yes

- name: create the initial patch file
  copy:
    dest: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints-patch.yml') | path_join }}"
    content: |
      subsets:
      - addresses:
    mode: '0644'

- name: merge all section of addresses
  shell: >-
    cat "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints' ~ ansible_loop.index ~ '.yml') | path_join }}"
    >> "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints-patch.yml') | path_join }}"
  loop: "{{ groups['kube_node'] }}"
  loop_control:
    extended: yes
  changed_when: true

- name: finalize patch file
  lineinfile:
    path: "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints-patch.yml') | path_join }}"
    insertafter: EOF
    line: >-2
        ports:
        - name: http-minio
          port: 9000
          protocol: TCP

- name: get the current endpoints json
  shell: >-
    set -o pipefail && kubectl get endpoints {{ minio_tenant_namespace }}-hl -n {{ minio_tenant_namespace }} -o yaml >
    "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'current-endpoints.yaml') | path_join }}"
  args:
    executable: /bin/bash
  changed_when: true

- name: patch MinIO Tenants Endpoints
  command: >-
    kubectl patch endpoints {{ minio_tenant_release_name }}-hl -n {{ minio_tenant_namespace }}
    --patch-file "{{ (project_root_dir, 'charts', 'tenant', 'temp', 'minio-tenant-endpoints-patch.yml') | path_join }}"
  changed_when: true
