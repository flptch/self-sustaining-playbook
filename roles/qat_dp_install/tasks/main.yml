##
##   Copyright (c) 2020-2022 Intel Corporation.
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       http://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.
##
---
- name: install dependencies
  include_role:
    name: install_dependencies

- name: clone Intel QAT Device Plugins repository
  git:
    repo: "{{ intel_qat_dp_git_url }}"
    version: "{{ intel_qat_dp_git_ref }}"
    dest: "{{ intel_qat_dp_dir }}"
    force: yes
  when:
    - inventory_hostname == groups['kube_node'][0]
    - qat_dp_build_image_locally

# Once the patch is released in official intel_qat_dp version
# remove this task and disable local build in group_vars.j2 via
# qat_dp_build_image_locally: false
# Correction expected in intel_qat_dp version 0.24.0
- name: apply qat_plugin patch
  patch:
    src: "{{ item }}"
    basedir: "{{ intel_qat_dp_dir }}"
    strip: 1
    state: present
  with_items:
    - "noiommu.patch"
  when:
    - inventory_hostname == groups['kube_node'][0]
    - qat_dp_build_image_locally
    - on_vms is defined and on_vms

- name: prepare containers images
  block:
    - name: Build QAT Plugin before Intel QAT Device Plugin image
      make:
        target: qat_plugin
        chdir: "{{ intel_qat_dp_dir }}"

    - name: build Intel QAT Device Plugin image
      make:
        target: intel-qat-plugin
        chdir: "{{ intel_qat_dp_dir }}"

    - name: tag Intel QAT Device Plugin image
      command: docker tag intel/intel-qat-plugin:{{ intel_qat_dp_version }} {{ registry_local_address }}/intel-qat-plugin:{{ intel_qat_dp_version }}

    - name: push Intel QAT Device Plugin image to local registry
      command: docker push {{ registry_local_address }}/intel-qat-plugin:{{ intel_qat_dp_version }}
  when:
    - inventory_hostname == groups['kube_node'][0]
    - qat_dp_build_image_locally
    - container_runtime == "docker"

- name: prepare containers images
  block:
    - name: build and tag Intel QAT Device Plugin image
      command: podman build -f build/docker/intel-qat-plugin.Dockerfile -t {{ registry_local_address }}/intel-qat-plugin:{{ intel_qat_dp_version }} .
      args:
        chdir: "{{ intel_qat_dp_dir }}"
      changed_when: true
      with_items:
        - { file: intel-qat-plugin.Dockerfile, name: intel-qat-plugin }

    - name: push Intel QAT Device Plugin image to local registry
      command: podman push {{ registry_local_address }}/intel-qat-plugin:{{ intel_qat_dp_version }}
      changed_when: true
  when:
    - inventory_hostname == groups['kube_node'][0]
    - qat_dp_build_image_locally
    - '"docker" not in container_runtime'

- name: prepare and deploy Intel QAT Device Plugin
  block:
    - name: set value for QAT DP image
      set_fact:
        qat_dp_image: "{{ registry_local_address }}/intel-qat-plugin"
      when:
        - inventory_hostname == groups['kube_control_plane'][0]
        - qat_dp_build_image_locally

    - name: populate Intel QAT Device Plugin yaml file and push to controller node
      template:
        src: "intel-qat-plugin.yml.j2"
        dest: "{{ (project_root_dir, 'intel-qat-plugin.yml') | path_join }}"
        force: yes
        mode: preserve
      when:
        - inventory_hostname == groups['kube_control_plane'][0]

    - name: deploy Intel QAT Device Plugin with the Intel Device Plugin Operator
      k8s:
        state: present
        src: "{{ (project_root_dir, 'intel-qat-plugin.yml') | path_join }}"
      when:
        - inventory_hostname == groups['kube_control_plane'][0]
